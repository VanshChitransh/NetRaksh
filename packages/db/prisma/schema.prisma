// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
   id        String    @id @default(cuid())
  email     String    @unique
  clerkId   String    @unique  
  websites  Websites[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  
  @@map("users")
}

model Websites {
  id       String         @id @default(uuid())
  url      String  
  userId   String  
  ticks    websiteTicks[]
  disabled Boolean        @default(false)
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  user     User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@index([userId])
  @@index([userId, disabled])
  @@map("websites")
}

model Validator {
  id        String         @id @default(uuid())
  publicKey String         @unique
  location  String
  ip        String         @unique
  pendingPayouts Int       @default(0)
  ticks     websiteTicks[]
  
  @@map("validators")
}

model websiteTicks {
  id          String        @id @default(uuid())
  websiteId   String
  validatorId String
  timeStamps  DateTime      @default(now())
  status      WebsiteStatus
  latency     Float
  website     Websites      @relation(fields: [websiteId], references: [id], onDelete: Cascade)
  validator   Validator     @relation(fields: [validatorId], references: [id], onDelete: Cascade)

  @@index([websiteId, timeStamps])
  @@index([validatorId, timeStamps])
  @@map("website_ticks")
}

enum WebsiteStatus {
  Good 
  Bad
}